U370DBUG TITLE 'Parse xxxxDBUG ddname, set debug options'
*
* Copyright 2001, 2002 James M. Morrison
*
*----------------------------------------------------------------------
*  To do:
*  1) Accept parm saying we're subtask, meaning:
*     a) Find main task's TGD, note in TGD@HOME (or something)
*     b) Rather than reading xxxxDBUG, copy debug values from
*        main task's TGD
*     Either accept the above parm, or just figure it out ourselves
*  2) Allow CSECT parm similar to DOS/VS UPSI switch
*     Copy UPSI to somewhere in SX
*----------------------------------------------------------------------
         U#SET FUNC=UTIL
*----------------------------------------------------------------------
* Function: Parse xxxxDBUG ddname, set debugging option bytes
*           TGDD* in TGDWA.  The values for each byte vary from
*           C'0' to C'9', and control UDIAG, UPSR, UWTO, etc.
*
* XMITDBUG syntax:
*
*           Each xxxx370 CSECT has one statement which is used to
*           set it's corresponding debug byte.  The syntax is
*
*               Column  1: CSECT name (upcase)
*               Column 10: debug value (C'0' - C'9')
*
*           Blank debug values are allowed, and ignored so that
*           a standard list of CSECTs may be maintained and only
*           modified when needed.
*
*           When CSECT name = 'DEFAULT', all debug bytes are primed
*           with this value.  When used, it should appear as the
*           first line of input.
*
*           Before xxxxDBUG is processed, all debug bytes are
*           set to whatever xxxT370 set TGDDLEV to
*           (C'0' or PARM= value).
*
* Entry:  AMODE=24, ASC=PRIMARY, KEY=*, STATE=*
*
*         R0  =
*         R1  =
*
* Exit:   R15 = return code
*         R15 = 00 success
*
* Abends:
*
* Notes:    This routine manages the xxxTDBUG DCB, no one else
*           need worry about it.  The ddname is optional.
*
*           xxxx is set from the TGDEYE(1,4) field, and is the
*           xxxx370 application name: XMIT, RECV, DAST, etc.
*----------------------------------------------------------------------
* Reg  DSECT    usage
*----------------------------------------------------------------------
* R2            ptr to debug byte for current CSECT
* R3   INREC    input record
* R4
* R5   TABLE    BXLE index
* R6            BXLE increment
* R7            BXLE compare value (table limit)
* R8   DCBD     xxxxDBUG DCB
* R9
* R10           saved R13 across GET macro
* R11  TGDWA    common
* R12           base reg
* R13  XDGWA    savearea
*----------------------------------------------------------------------
         TITLE ' '
*----------------------------------------------------------------------
U370DBUG UPROC ID=UDBG,WA=XDGWA,L=L$XDGWA
         UDIAG 1,'U370DBUG entered'
*----------------------------------------------------------------------
*  Handle OS parm, set default debug levels
*----------------------------------------------------------------------
         MVI   TGDDLEV,C'0'                 default diagnostic level
*
         ICM   R4,15,TGD@PARM               OS parm ptr
         BZ    NOPARM
         L     R4,0(,R4)                    @ OS parm string
         LH    R14,0(,R4)                   l' parm string
         LTR   R14,R14                      anything?
         BNP   NOPARM                       no, br
         MVC   TGDDLEV,2(R4)                copy diag char
NOPARM   DS    0H
*----------------------------------------------------------------------
*  Initialize TGDD* values to default
*----------------------------------------------------------------------
         MVC   TGDDLEV+1(TGDDEND-TGDDLEV-1),TGDDLEV   propagate value
*----------------------------------------------------------------------
*  Initialize XDGWA workarea
*----------------------------------------------------------------------
         MVC   XDGDCB(L$DCB),MODLDCB        copy model DCB macro
         MVC   XDGOPN(L$OPN),MODLOPN        copy model OPEN macro
         MVI   XDGEOF,0                     not EOF
         LA    R8,XDGDCB
         USING IHADCB,R8
         MVC   DCBDDNAM(4),TGDEYE           set xxxx
         MVC   DCBDDNAM+4(4),=C'DBUG'       ddname = xxxxDBUG
*----------------------------------------------------------------------
*  Open DCB
*----------------------------------------------------------------------
         LA    R1,DCBDDNAM                  DDNAME=xxxTDBUG
         UCALL U370TIOT                     ddname allocated?
         LTR   R1,R1
         BZ    RCZERO                       nope, never mind
*
         OPEN  (XDGDCB,INPUT),MF=(E,XDGOPN)
         TM    DCBOFLG1,DCBOFOPN            opened?
         BNO   RCZERO                       no, don't cares why, done
*
         UDIAG 2,'U370DBUG processing xxxxDBUG ddname'
*----------------------------------------------------------------------
*  Read input record
*----------------------------------------------------------------------
         LR    R10,R13                      preserve our savearea
READ     DS    0H
         GET   (R8)                         locate record
         CLI   XDGEOF,X'00'                 EOF?
         BNE   ENDOFILE                     yes, br
*
         CLI   0(R1),C'*'                   COMMENT?
         BE    READ
*
         LR    R3,R1                        ptr to input record
         USING INREC,R3
*----------------------------------------------------------------------
*  Process input record
*----------------------------------------------------------------------
PROCESS  DS    0H
         ICM   R5,15,TGD@VTAB               @ VCON table header
         BZ    OOPS
*
         LM    R5,R7,0(R5)                  index, incr, limit
         USING VTABLE,R5
         CLC   =CL8'DEFAULT',INAME          setting DEFAULT?
         BNE   CKCSECT
*
         MVC   TGDDLEV,INVAL
         MVC   TGDDLEV+1(TGDDEND-TGDDLEV-1),TGDDLEV  propagate default
         B     READ
*
CKCSECT  DS    0H
         CLC   VTABNAME,INAME               found CSECT name?
         BNE   CKNEXT                       no, advance index
*
         CLI   INVAL,C' '                   blank ... ignore
         BE    READ                         (but shows CSECT entry)
*
         LH    R2,VTABOFF                   debug byte offset
         LA    R15,TGDDLEV(R2)              @ debug byte
         MVC   0(1,R15),INVAL               set debug byte
         B     READ
*
CKNEXT   DS    0H
         BXLE  R5,R6,CKCSECT                find CSECT name in table
*
         UDIAG 1,'U370DBUG unknown CSECT ignored',(R3),L$IN
         B     READ
*
OOPS     ULOG  'U370DBUG - installation error'
         ULOG  'U370DBUG - unable to locate U370VTAB CSECT'
         UABEND ,
         EJECT ,
*----------------------------------------------------------------------
*  EOF - close DCB
*----------------------------------------------------------------------
EOFRTN   DS    0H                           EODAD exit routine
         MVI   XDGEOF-XDGWA(R10),1          hit EOF, set flag
         BR    R14                          return to GET macro
*
ENDOFILE DS    0H
         MVC   XDGCLOS(L$CLOS),MODLCLOS     copy model CLOSE macro
         CLOSE (XDGDCB,),MF=(E,XDGCLOS)
         EJECT ,
*----------------------------------------------------------------------
*  Show some info about each CSECT, and give TGDWA's address
*----------------------------------------------------------------------
*
*  Issue the diagnostics AFTER input has been handled, so xxxxDBUG's
*  debug byte has a user-selected value
*  The SKIP=RCZERO skips the following code (thru BXLE) if the
*  diagnostic level is less than 1.
*
         UDIAG 1,SKIP=RCZERO
*
*  Say where TGDWA is located
*
         UPSR  1,'U370DBUG TGDWA @ %',(R11)
*
*
*  For each CSECT, issue message containing:
*  debug level, address, CSECT name, assembly date and time
*
         ULOG  '<1>                 CSECT     ASMDATE  TIME      CPD   +
                       DSA'
         L     R5,TGD@VTAB                  @ VCON table header
         LM    R5,R7,0(R5)                  index, incr, limit
VCONLOOP DS    0H
         MVI   XDGBUF,C' '                  blank out buffer
         MVC   XDGBUF+1(L$XDGBUF-1),XDGBUF
*
         MVC   XDGBEYE,=C'<1> '             fake diag level prefix
*
         LH    R2,VTABOFF                   debug byte offset
         LA    R15,TGDDLEV(R2)              @ debug byte
         MVC   XDGBLVL,0(R15)               copy debug byte to msg
*
         L     R0,VTABVCON                  CSECT addr
         LA    R1,XDGBADR                   display hex
         UCALL U370HEX                      convert R0 to display hex
*
         LH    R0,VTCSL                     CSECT length
         SLR   R1,R1
         UCALL U370HEX                      convert R0 to display hex
         STCM  R1,15,XDGBCSLN
         MVI   XDGBCSLN-1,C'.'
*
         MVC   XDGBCS,VTABNAME              copy CSECT name
*
         ICM   R15,15,VTABVCON              @ CSECT or zero
         BZ    MESSAGE
*
         MVC   XDGBCS,5(R15)                copy CSECT
         MVC   XDGBDATE,13(R15)             copy asm date
         MVC   XDGBTIME,21(R15)             copy asm time
*
         L     R0,VT@CPD                    CPD addr
         LA    R1,XDGB@CPD                  display hex
         UCALL U370HEX                      convert R0 to display hex
*
         MVI   XDGBCPDL-1,C'.'
         LH    R0,VTCPDL                    CPD length
         SLR   R1,R1                        display hex
         UCALL U370HEX                      convert R0 to display hex
         STCM  R1,15,XDGBCPDL
*
         L     R0,VT@SX                     SX  addr
         LA    R1,XDGB@DSA                  display hex
         UCALL U370HEX                      convert R0 to display hex
*
         MVI   XDGBDSAL-1,C'.'
         LH    R0,VTDSAL                    SX  length
         SLR   R1,R1                        display hex
         UCALL U370HEX                      convert R0 to display hex
         STCM  R1,15,XDGBDSAL
*
MESSAGE  ULOG  XDGBUF,L$XDGBUF              display message
*
         BXLE  R5,R6,VCONLOOP               next CSECT
         EJECT ,
*----------------------------------------------------------------------
*  Return to caller with zero return code
*----------------------------------------------------------------------
RCZERO   DS    0H
         L     R5,TGD@VTAB                  @ VCON table header
         LM    R5,R7,0(R5)                  index, incr, limit
         UDIAG 3,'U370DBUG DEBUG BYTES',TGDDLEV,TGDDEND
         UDIAG 3,'U370DBUG CSECT table',(R5),(R7)
         UPEND RC=0
         EJECT ,
*----------------------------------------------------------------------
*  Data areas
*----------------------------------------------------------------------
MODLOPN  OPEN  (,),MF=L                model OPEN
L$OPN    EQU   *-MODLOPN               l' model open
*
MODLCLOS CLOSE (,),MF=L                model CLOSE
L$CLOS   EQU   *-MODLCLOS              l' model close
*
MODLDCB  DCB   DDNAME=X370DBUG,MACRF=GL,DSORG=PS,RECFM=FB,LRECL=80,    +
               EODAD=EOFRTN
L$DCB    EQU   *-MODLDCB
*
         LTORG ,
         EJECT ,
*----------------------------------------------------------------------
*  XDGWA workarea
*----------------------------------------------------------------------
XDGWA    DSECT ,
XDGSA    DS    18F
XDGOPN   OPEN  0,MF=L
XDGCLOS  CLOSE 0,MF=L
XDGEOF   DS    X                       set not = X'00' on EOF
XDGDCB   DCB   DDNAME=XXXXDBUG,MACRF=GL,DSORG=PS,RECFM=FB,LRECL=80,    +
               EODAD=EOFRTN
XDGBUF   DS    0C                      diagnostic message buffer
XDGBEYE  DS    C'<1> '
XDGBLVL  DS    C                       diagnostic level
         DS    C
XDGBADR  DS    CL8                     CSECT address
         DS    C
XDGBCSLN DS    CL4
         DS    C
XDGBID   DS    0C                      CSECT name, asm date/time
XDGBCS   DS    CL8                     CSECT name
         DS    C
XDGBDATE DS    CL8                     CSECT assembly date
XDGBTIME DS    CL7                     CSECT assembly time
XDGB@CPD DS    CL8                     CPD address
         DS    C
XDGBCPDL DS    CL4
         DS    C
XDGB@DSA DS    CL8                     DSA addresss
         DS    C
XDGBDSAL DS    CL4
L$XDGBUF EQU   *-XDGBUF                length of buffer
*
         DS    0D
L$XDGWA  EQU   *-XDGWA
*----------------------------------------------------------------------
*  Input record
*----------------------------------------------------------------------
INREC    DSECT ,
INAME    DS    CL8           CSECT name
         DS    C             ignored
INVAL    DS    C             Debug value - C'0' to C'9' (assumed)
L$IN     EQU   *             length of significant part of input rec
*
         UVTAB MF=DSECT
*
         PRINT NOGEN
         WATGD ,
         DCBD  DSORG=PS,DEVD=DA
*
         PRINT ON,GEN
U370DBUG UFINI DXDUDBUG,L$XDGWA
         END   ,
