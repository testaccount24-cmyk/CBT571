U370SNAP TITLE 'DIAGNOSTIC tool: display storage'
*
* Copyright 2001, 2002 James M. Morrison
*
*----------------------------------------------------------------------
*  Things to do:
*  1)  Display length of snap in hex & decimal
*----------------------------------------------------------------------
         U#SET FUNC=UTIL
*----------------------------------------------------------------------
*
* Function: display dump-formatted storage on XMITLOG ddname
*
* Input:  R1 points at following parameter list:
*
*  +0     Zero or address of TITLE (see below).
*
*  +4     Address of virtual storage address at which to begin.
*
*  +8     Address of virtual storage address at which to end.
*         Alternatively, this parameter may contain the length
*         of storage to be displayed, rather than an address.
*
*         TITLE:
*
*         The length of the title is determined by the following
*         technique:  if the first byte of the title < 60,
*         then the first byte is the length of following title.
*         Otherwise, the title is delimited by X'00'.
*         The title's maximum length is 60.
*
*         R13 points to caller-provided savearea
*
*         R14 return address
*
*         R15 entry point address of this routine
*
* Output: Input data displayed.
*
*         R15 =  00
*
* Notes:
*----------------------------------------------------------------------
         TITLE ' '
U370SNAP UPROC ID=USNP,L=L$SA
         EJECT ,
*
* Initialize
*
         LM    R3,R5,0(R1)
         LA    R4,0(,R4)               clear hi bits
         LA    R5,0(,R5)               clear hi bits
         STM   R3,R5,PARMS             save input parms
*----------------------------------------------------------------------
*  Display title
*----------------------------------------------------------------------
         LTR   R3,R3                   title supplied?
         BZ    NOTITLE                 no, br
*
         ULOG  ' '                     blank line
*
         CLI   0(R3),MAXLEN            1st byte length?
         BH    SCANTITL                no, br ... need to scan
*
         SLR   R6,R6
         IC    R6,0(R3)                get title's length
         LA    R7,1(,R3)               1st byte of title
         B     TITLEOUT
*
SCANTITL DS    0H
         LR    R7,R3                   @ 1st byte of title
         TRT   0(MAXLEN,R3),ZVALID     scan for non-display
         BZ    MAXLENT                 found all displayable
*
         SR    R1,R3                   calculate length
         LR    R6,R1
         C     R6,=A(MAXLEN)           too long?
         BNH   TITLEOUT
*
MAXLENT  DS    0H
         LA    R6,MAXLEN               set maximum title length
*
TITLEOUT DS    0H
         LR    R0,R6                   length of title
         LR    R1,R7                   address of title
         UCALL U370LOG                 print title
*
MAXLEN   EQU   60                      Maximum title length
NOTITLE  DS    0H
         EJECT ,
*----------------------------------------------------------------------
*  Display storage specifications
*----------------------------------------------------------------------
         MVC   CLABEL,=C'DISPLAYING '
         MVI   CRANGE,C':'             set range char
*
         L     R0,@START               starting address
         LA    R1,CSTART               char format
         BAL   R14,XLATE               convert to display hex
*
         LM    R14,R15,@START
         LR    R8,R15                  save requested length
         CR    R15,R14                 ending addr > starting?
         BH    USE@END                 yes, ok to use
*
         AR    R15,R14                 calculate ending addr
         ST    R15,@END                fake out parmlist
         LTR   R8,R8
         BNZ   USE@END
         L     R0,@END                 ending address
         B     USEXLATE
*
USE@END  DS    0H
         L     R0,@END                 ending address
         BCTR  R0,0                    minus one
USEXLATE LA    R1,CEND                 char format
         BAL   R14,XLATE               convert to display hex
*
         MVI   CSPACE1,C' '
         L     R0,@END
         S     R0,@START
         LA    R1,CHEXLEN              length (hex)
         BAL   R14,XLATE
*
         LA    R0,L$SPECS
         LA    R1,CLABEL               label following output
         UCALL U370LOG                 type output
*
         LTR   R8,R8                   requested length zero?
         BZ    EXIT                    done, no storage displayed
         EJECT ,
*----------------------------------------------------------------------
*  Format output line(s)
*----------------------------------------------------------------------
FORMAT   DS    0H
         XC    DISPL,DISPL             zero displacement
         L     R4,@START               @ beginning of area
*        N     R4,=X'FFFFFFFC'         align on fullword boundary
*
FLINE    DS    0H
         LR    R8,R4                   storage @ start of line
         MVI   CFORMAT,C' '
         MVC   CFORMAT+1(L$FORMAT-1),CFORMAT    clear line,
         MVI   CSTAR1,C'*'                      delimit
         MVI   CSTAR2,C'*'                      char area
*
         LR    R0,R4
         LA    R1,CADDR
         BAL   R14,XLATE               make ADDRESS char
*
         L     R0,DISPL
         LA    R1,CJUNK
         BAL   R14,XLATE               make DISPLACEMENT char
         MVC   CDISPL(4),CJUNK+4       copy last 4 digits
         A     R0,=F'16'               using 4 fullwords
         ST    R0,DISPL                setup for next time
         EJECT ,
*----------------------------------------------------------------------
*  Fill CWORDn - 4 fullwords worth of EBCDIC chars
*----------------------------------------------------------------------
         LA    R5,4                    # word slots avail
         LA    R6,CWORD1               @ first slot
*
FLOOP    DS    0H
         ICM   R0,15,0(R4)             grab 1st 4 bytes
         LA    R1,CBYTES               workarea
         BAL   R14,XLATE               make 1st word char
* copy only right # chars from CBYTES to CWORDn
         LM    R14,R15,CBYTES          get display hex in regs
         L     R1,@END                 addr last char to display
         SR    R1,R4                   calc # chars to put in CWORDn
PUTC     STCM  R14,12,0(R6)            put char in CWORDn
         SLDL  R14,16                  discard char
         LA    R6,2(,R6)
         LTR   R14,R14                 got 'em all?
         BZ    BUMPC                   yep
         S     R1,=F'1'
         BP    PUTC
BUMPC    DS    0H
         LA    R4,4(,R4)               setup for next time
         LA    R6,1(,R6)               space between CWORDs
*
         C     R4,@END                 displayed enough?
         BNL   CKOLD                   yes, see if duplicate line
         S     R5,=F'1'                one less slot
         BP    FLOOP                   still have some left
*
*  For duplicate lines, print one line with some '-'s, ignore rest
*
CKOLD    DS    0H
         CLC   OLDBYTES(L'CWORD1*4),CWORD1   same?
         BNE   FCHAR                         no, br
         MVI   CADDR,C'-'
         MVC   CADDR+1(13),CADDR             propagate .
         MVI   CDISPL-1,C' '
         B     FCHAR2
         EJECT ,
*----------------------------------------------------------------------
*  Format EBCDIC translation of hex data portion of output line
*----------------------------------------------------------------------
FCHAR    DS    0H
         MVI   FLAG1,0                       reset state
         MVC   OLDBYTES(L'CWORD1*4),CWORD1   save current CWORD1-4
FCHAR2   LA    R9,16                   # chars in char display
         LR    R15,R8                  @ begin of line's data
         LA    R14,CCHAR
         MVC   CCHAR,=CL16' '          init to blanks
*
CLOOP    DS    0H
         MVC   0(1,R14),0(R15)         copy for displaying
         LA    R15,1(,R15)
         LA    R14,1(,R14)
         C     R15,@END
         BNL   CLOOP2
         S     R9,=F'1'
         BP    CLOOP
*
CLOOP2   DS    0H
         TR    CCHAR,ZDISP             convert non-display
         LR    R8,R4                   now done with those
*
         CLI   CADDR,C'-'              duplicate?
         BNE   PRINT
         TM    FLAG1,FLG1SUP           suppress?
         BO    NEXTLINE
         OI    FLAG1,FLG1SUP           suppress following dup lines
PRINT    LA    R0,L$FORMAT             length of output line
         LA    R1,CFORMAT              addr of output line
         UCALL U370LOG                 type output
*
NEXTLINE DS    0H
         C     R4,@END                 more lines to format?
         BL    FLINE                   yes, br
         EJECT ,
*----------------------------------------------------------------------
*  Return to caller
*----------------------------------------------------------------------
EXIT     DS    0H
         SLR   R15,R15
         UPEND ,                       return to caller
         TITLE 'XLATE Subroutine'
*----------------------------------------------------------------------
*  XLATE subroutine
*----------------------------------------------------------------------
*
* Input:   R0  = value to translate
*
*          R1  = address of 8 bytes to receive translated
*                "display hexadecimal" output
*
*          R14 = return address
*
XLATE    DS    0H
         ST    R0,FWORD                value to translate
         UNPK  XWORK,FWORD(5)          spread out digits
         TR    XWORK,HEXCHAR-C'0'      translate to char
         MVC   0(8,R1),XWORK           return data to caller
         BR    R14                     return to caller
*
HEXCHAR  DC    C'0123456789ABCDEF'     Hex translate table
         TITLE 'DATA AREAS'
*----------------------------------------------------------------------
* Data areas (not modified)
*----------------------------------------------------------------------
ZVALID   DS    0X
*                000102030405060708090A0B0C0D0E0F    ..
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' X'00'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' X'10'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' X'20'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' X'30'
         DC    X'00FFFFFFFFFFFFFFFFFF000000000000' X'40'
         DC    X'00FFFFFFFFFFFFFFFFFF000000000000' X'50'
         DC    X'00FFFFFFFFFFFFFFFFFF000000000000' X'60'
         DC    X'FFFFFFFFFFFFFFFFFF00000000000000' X'70'
         DC    X'FF000000000000000000FFFFFFFFFFFF' X'80' a-i
         DC    X'FF000000000000000000FFFFFFFFFFFF' X'90' j-r
         DC    X'FF000000000000000000FFFFFFFFFFFF' X'A0' s-z
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' X'B0'
         DC    X'00000000000000000000FFFFFFFFFFFF' X'C0' A-I
         DC    X'00000000000000000000FFFFFFFFFFFF' X'D0' J-R
         DC    X'00FF0000000000000000FFFFFFFFFFFF' X'E0' S-Z
         DC    X'00000000000000000000FFFFFFFFFFFF' X'F0' 0-9
*                000102030405060708090A0B0C0D0E0F    ..
*
ZDISP    DS    0X
*                0123456789ABCDEF
         DC    C'................'                       X'00'
         DC    C'................'                       X'10'
         DC    C'................'                       X'20'
         DC    C'................'                       X'30'
         DC    X'40',C'.........',X'4A4B4C4D4E4F'        X'40'
         DC    X'50',C'.........',X'5A5B5C5D5E5F'        X'50'
         DC    X'60',C'.........',X'6A6B6C6D6E6F'        X'60'
         DC    C'.........',X'797A7B7C7D7E7F'            X'70'
         DC    C'.ABCDEFGHI',X'8A8B8C8D8E8F'             X'80'
         DC    C'.JKLMNOPQR',X'9A9B9C9D9E9F'             X'90'
         DC    C'.',X'A1',C'STUVWXYZ',X'AAABACADAEAF'    X'A0'
         DC    C'................'                       X'B0'
         DC    X'C0',C'ABCDEFGHI',X'CACBCCCDCECF'        X'C0'
         DC    X'D0',C'JKLMNOPQR.',X'DBDCDDDEDF'         X'D0'
         DC    X'E0',C'.STUVWXYZ',X'EAEB',C'.',X'EDEEEF' X'E0'
         DC    C'0123456789......'                       X'F0'
*                0123456789ABCDEF
*
         LTORG ,
         TITLE 'DSECTS'
*----------------------------------------------------------------------
* Dynamic savearea & workarea
*----------------------------------------------------------------------
SAVEAREA DSECT ,
         DS    19F
XWORK    DC    CL9' '
FWORD    DC    F'0'
*
PARMS    DS    0XL12                   parmlist:
@TITLE   DC    A(0)                    A(title)
@START   DC    A(0)                    A(beginning of storage)
@END     DC    F'0'                    A(end of storage)
*
FLAG1    DS    X
FLG1SUP  EQU   64                      suppress duplicate lines
*
CLABEL   DC    C'DISPLAYING '
CSTART   DC    CL8' '
CRANGE   DC    C':'
CEND     DC    CL8' '
CSPACE1  DC    C' '
CHEXLEN  DC    CL8' '
L$SPECS  EQU   *-CLABEL                length of stor specs
*
CFORMAT  DS    0C
CADDR    DC    C'XXXXYYYY  '           address
CDISPL   DC    C'DDDD  '               displacement
CWORD1   DC    C'AABBCCDD '            1st word
CWORD2   DC    C'AABBCCDD '            2nd word
CWORD3   DC    C'AABBCCDD '            3rd word
CWORD4   DC    C'AABBCCDD '            4th word
CSTAR1   DC    C'*'
CCHAR    DC    C'....++++....++++'     char values
CSTAR2   DC    C'*'
L$FORMAT EQU   *-CFORMAT               length of output line
*
OLDBYTES DS    4CL(L'CWORD1)           previous CWORD1-4
*
         DS    0F                      align
CBYTES   DC    C'AABBCCDD '            CWORDn workarea
*
         DS    0F
CJUNK    DC    CL8' '
DISPL    DC    F'0'
         DS    0D
L$SA     EQU   *-SAVEAREA              length of savearea
         EJECT ,
         WATGD ,
         PRINT GEN
U370SNAP UFINI DXDUSNAP,L$SA
         END   ,
