         GBLC  &XMTREGS
DASTMVCP TITLE 'DAS test'
*----------------------------------------------------------------------
* To do:
*----------------------------------------------------------------------
         U#SET FUNC=DAST
*----------------------------------------------------------------------
*
* Notes:
*
* Debug:  1  entry; # times retried at exit
*         2  show ASCB, ASXB
*         3  show ASVT
*         4  show MVCP result
*         5  show ASID (even for unassigned ASs)
*         6  show control regs at entry
*         7  MVCP regs
*         8  SAVEAREA @ exit
*----------------------------------------------------------------------
* R2      MVCP parm, scratch
* R3      MVCP parm
* R4      ASVT
* R5      current ASVT entry
* R6      ASCB
* R7
* R8
* R9
* R10
* R11    DASTWA
* R12    base reg
* R13    savearea/workarea
*----------------------------------------------------------------------
*
*  UABEND reason codes
*
ERR#1    EQU   1             MVCP source won't fit in SAWORK
         TITLE ' '
*----------------------------------------------------------------------
DASTMVCP UPROC L=L$SA,ID=RBLK,CPD=(Y,0,ESTAE),INIT=MVCL
         EJECT ,
         UDIAG 1,'DASTMVCP entered'
         UESTAE RETRY
*----------------------------------------------------------------------
*  Save system's control regs (mostly curiosity)
*----------------------------------------------------------------------
         MODESET MODE=SUP
         STCTL R0,15,SACTL
         UDIAG 6,'DASTMVCP Control regs at entry',SACTL,16*4
*----------------------------------------------------------------------
*  Run ASVT, snap each ASCB
*----------------------------------------------------------------------
         STCTL R0,R0,SACTL0
         OI    SACTL0,B'00000100'           enable DAS
         LCTL  R0,R0,SACTL0
*
         L     R2,16                        @ CVT
         L     R4,CVTASVT-CVT(,R2)          @ ASVT
         USING ASVT,R4
*
         L     R14,ASVTMAXU                 max # ASs
         SLL   R14,2                        * 4
         LA    R14,ASVTENTY-ASVT(,R14)      length of ASVT
         UDIAG 3,'DASTMVCP ASVT',(R4),(R14)
         LA    R5,ASVTENTY-4
*
NXTASVT  DS    0H
         LA    R5,4(,R5)                    @ next ASVT entry
         CLC   =X'80000000',0(R5)           last ASVT entry?
         BE    LASTASVT
*
         L     R6,0(R5)                     @ ASCB
         USING ASCB,R6
         LH    R14,ASCBASID                 ASID
         UPSR  5,'DASTMVCP ASID',(R14)
*
         TM    0(R5),ASVTAVAL               ASID available?
         BO    NXTASVT
*
         ICM   R14,15,ASCBJBNI              jobname ptr
         BNZ   *+8
         ICM   R14,15,ASCBJBNS              stc/mount/log name ptr
         MVC   SAMSG+00(8),0(R14)
         MVC   SAMSG+09(4),=C'ASID'
         LH    R0,ASCBASID
         SLR   R1,R1
         UCALL U370HEX
         STCM  R1,15,SAMSG+14
         MVC   SAMSG+19(11),=C'           '
         TM    ASCBRCTF,ASCBOUT
         BNO   *+10
         MVC   SAMSG+19(11),=C'SWAPPED-OUT'
         ULOG  SAMSG
*
         UDIAG 2,'DASTMVCP ASCB',(R6),L$ASCB
         TM    ASCBRCTF,ASCBOUT             swapped out?
         BO    NXTASVT
*----------------------------------------------------------------------
*  Retrieve ASXB (in LSQA) for AS
*----------------------------------------------------------------------
         LA    R0,L$ASXB                    length
         L     R1,ASCBASXB                  2nd AS source
         LA    R2,SAWORK                    1st AS destination
         LR    R3,R6                        ASCB
*
         MVI   SAREASON,ERR#1
         LA    R15,L'SAWORK
         CR    R0,R15                       too long?
         BH    DIE
*
         BAL   R14,MVCP                     copy 2ndry AS data
         UDIAG 2,'DASTMVCP ASXB',SAWORK,L$ASXB
         B     NXTASVT
         EJECT ,
*----------------------------------------------------------------------
*  MVCP routine
*
*  Entry:
*        R0    length
*        R1    Secondary AS source addr
*        R2    Primary   AS destination addr
*        R3    ASCB
*----------------------------------------------------------------------
         PUSH  USING
MVCP     DS    0H
         STM   R0,R15,SA2                   save caller's regs
         LCTL  R7,R7,ASCBSTOR-ASCB(R3)      2ndry STOR
         LA    R3,256                       max length per MVCP
         LR    R7,R0                        MVCP length
         LR    R9,R1                        MVCP source
         LR    R8,R2                        MVCP destination
         SLR   R10,R10                      MVCP 2ndry storage key
         LR    R2,R0
MVCPLOOP DS    0H
         UDIAG 7,'DASTMVCP MVCP regs',&XMTREGS,16*4,REGS=YES
*
*
*  Move to Primary
*
*        MVCP  0(R7,R8),0(R9),R10
*
*        Length of move:              R7
*        Primary AS destination:      0(R8)
*        Secondary AS source:         0(R9)
*        Secondary AS access key:     R10 - bits 24-27
*
         DC    X'DA',AL.4(R7,R10),S(0(R8),0(R9))
         BZ    MVCPEXIT
*
         AR    R8,R3                        bump destination
         AR    R9,R3                        bump source
         SR    R7,R3                        decr remaining length
         BP    MVCPLOOP
*
MVCPEXIT DS    0H
         UDIAG 4,'DASTMVCP MVCP result',SAWORK,(R2)
         LM    R0,R15,SA2                   restore caller's regs
         BR    R14
         POP   USING
*----------------------------------------------------------------------
*  Internal error
*----------------------------------------------------------------------
DIE      UABEND SAREASON
*----------------------------------------------------------------------
*  Restore system's control regs
*----------------------------------------------------------------------
LASTASVT DS    0H
RESET    DS    0H
         LCTL  R0,R0,SACTL+(R0*4)           restore original CR0
         LCTL  R7,R7,SACTL+(R7*4)           restore original CR7
         MODESET MODE=PROB
*----------------------------------------------------------------------
*  Return to caller
*----------------------------------------------------------------------
EXIT     DS    0H                           return values set
         UDIAG 8,'DASTMVCP savearea',SAVEAREA,L$SA
         UPSR  1,'DASTMVCP # times retried',*SARC
         UPEND RC=SARC
*----------------------------------------------------------------------
*  ESTAE retry routine
*----------------------------------------------------------------------
RETRY    DS    0H
         UDIAG 0,'DASTMVCP retry SDWA',(R1),512
*
         L     R10,SARC
         LA    R10,1(,R10)
         ST    R10,SARC
         UPSR  0,'DASTMVCP retry sarc',(R10)
*
         C     R10,=F'3'
         BL    RESET
*
         TM    SAFLAG1,SA1ENT          been here before?
         BO    EXIT
         OI    SAFLAG1,SA1ENT          flag entry
         B     RESET
*----------------------------------------------------------------------
*  Data areas
*----------------------------------------------------------------------
         LTORG ,
         EJECT ,
*----------------------------------------------------------------------
*  Savearea/workarea
*----------------------------------------------------------------------
SAVEAREA DSECT ,
SA       DS    18F                     savearea for called code
SA2      DS    16F                     savearea for MVCP
SARC     DS    F
*
SAFLAG1  DS    X                       status flag
SA1ENT   EQU   128                     RETRY routine entered
*
SAREASON DS    X                       UABEND reason code
*
SAMSG    DS    CL80
*
         DS    0D
SAWORK   DS    CL1024                  MVCP destination
*
SACTL    DS    16F
SACTL0   DS    F                       modified CR0
SACTL7   DS    F                       modified CR7
SAWORD   DS    F
         DS    0D
L$SA     EQU   *-SAVEAREA
*
         EJECT ,
*
         PRINT GEN
         WADAST ,
         PRINT NOGEN
*
         CVT   DSECT=YES,LIST=NO
*
         IHAASVT ,
*
         IHAASCB ,
L$ASCB   EQU   *-ASCB
*
         IHAASXB ,
L$ASXB   EQU   *-ASXB
*
         IKJTCB  LIST=NO
L$TCB    EQU   TCBLEN-TCBPXLEN
*
         PRINT GEN
DASTMVCP UFINI DXDRGET,L$SA
*
         END   ,
