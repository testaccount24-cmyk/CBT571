RECVBLK  TITLE 'Assemble segments into data block'
*
* Copyright 2001, 2002 James M. Morrison
*
*----------------------------------------------------------------------
* Things to do:
*----------------------------------------------------------------------
         U#SET FUNC=RECV
*----------------------------------------------------------------------
* Function: Reads (via RECVGSEG calls) sufficient data segments to
*           reconstruct a data block
*
* Entry:  AMODE=24, ASC=PRIMARY, KEY=*, STATE=*
*
*         R0  =  buffer length
*         R1  =  buffer address
*
* Exit:   R15 =  Return code
*
*                0 = buffer contains data block
*
*                    R0 = length of block
*                    R1 = address of block
*
*                4 = encountered control segment
*
*                    R0 = 0
*                    R1 = address of control segment
*
* Abends: U0016  internal error - R14 useful
*         U0017  incomplete data block (XMIT probably damaged)
*         U0018  EOF encountered
*         U0019  buffer overflow (XMIT probably damaged)
*
* Notes:  Caller is responsible for supplying BDW & RDW.
*         The XMIT file doesn't contain them, and we don't
*         return them.
*
* Debug:  1  entry/exit; exit shows RC
*         2  exit shows block length
*            control segment snapped
*         3  exit shows data block
*----------------------------------------------------------------------
* R2     constant; SEGL - (R2) = # data bytes
* R3     constant; SEGL - (R3) = # data bytes minus one (for EX)
* R4     @ buffer slot to receive segment
* R5     buffer length remaining
* R6     block length
* R7     internal linkage
* R8     SEG
* R9     SEGL - (R3) = segment data EX length
* R10    # segment data bytes
* R11    XMTWA
* R12    base reg
* R13    savearea/workarea
*----------------------------------------------------------------------
         TITLE ' '
*----------------------------------------------------------------------
RECVBLK  UPROC L=L$SA,ID=RBLK,WA=SAVEAREA
         EJECT ,
*----------------------------------------------------------------------
*  Initialize
*----------------------------------------------------------------------
INIT     DS    0H
         BALR  R14,0
         LTR   R5,R0                        buffer length
         BZ    DIE
*
         BALR  R14,0
         LTR   R4,R1                        buffer address
         BZ    DIE
*
         UDIAG 1,'RECVBLK entered'
*
         ST    R4,SARADDR                   set R1 return
         LA    R2,SEGBUF-SEG                # seg overhead bytes
         LA    R3,1(,R2)                    use to get EX length
         SLR   R6,R6                        accumulate block length
         SLR   R9,R9                        only need to clear once
         BALR  R7,0                         faster looping
         EJECT ,
*----------------------------------------------------------------------
* Call RECVGSEG until block complete
*----------------------------------------------------------------------
GETSEG   DS    0H
         SLR   R0,R0                        no flags
         UCALL RECVGSEG                     retrieve segment (R1 = @)
         LTR   R8,R1                        got one?
         BZ    ENDOFILE                     shouldn't happen
*
         USING XMITSEG,R8
         TM    SEGFLG,SEG$C                 control segment?
         BO    HVCTL
*
HVDATA   DS    0H                           have data segment
         OI    SAFLG1,SA1DATA               saw data segment
         IC    R9,SEGL                      segment length
         LR    R10,R9
*
         SR    R10,R2                       R10 = # data bytes
         SR    R5,R10                       buffer overflow?
         BM    DIEBUF
*
         SR    R9,R3                        l' segment data minus one
         EX    R9,COPYSEG
         LA    R4,0(R10,R4)                 @ next buffer slot
         AR    R6,R10                       accumulate block length
         TM    SEGFLG,SEG$L                 last segment of block?
         BO    SEGFINI
*
         BR    R7                           continue building block
*
COPYSEG  MVC   0(*-*,R4),SEGBUF             copy segment to buffer
         EJECT ,
*----------------------------------------------------------------------
*  Internal error - invalid parms
*----------------------------------------------------------------------
DIE      UABEND SAREASON                    R14 useful
*----------------------------------------------------------------------
*  Block incomplete (truncated), no SEG$L before control segment
*----------------------------------------------------------------------
BLKTRUNC DS    0H
         STM   R0,R15,XMTREGS
         ULOG  'RECVBLK incomplete data block'
         MVI   SAREASON,17
         B     DIE
*----------------------------------------------------------------------
* End Of File
*----------------------------------------------------------------------
ENDOFILE DS    0H
         ULOG  'RECVBLK EOF'
         MVI   SAREASON,17
         B     DIE
*----------------------------------------------------------------------
*  Buffer overflow
*----------------------------------------------------------------------
DIEBUF   DS    0H
         STM   R0,R15,XMTREGS
         ULOG  'RECVBLK buffer overflow'
         USNAP 'RECVBLK buffer contents',*SARADDR,(R6)
         MVI   SAREASON,19
         B     DIE
*----------------------------------------------------------------------
*  Encountered control segment
*----------------------------------------------------------------------
HVCTL    DS    0H
         TM    SAFLG1,SA1DATA               saw DATA segment(s)?
         BO    BLKTRUNC
*
         ST    R8,SARADDR                   return ctl seg addr
         SLR   R3,R3
         IC    R3,SEGL
         UDIAG 2,'RECVBLK encountered control segment',(R8),(R3)
         LM    R15,R0,=A(4,0)
         STM   R15,R0,SARET
         B     EXIT
         EJECT ,
*----------------------------------------------------------------------
*  Segment complete
*----------------------------------------------------------------------
*                                           INIT set R1 return
SEGFINI  DS    0H                           PROC cleared SARC
         ST    R6,SARLEN                    return block length
         UPSR  2,'RECVBLK block length',(R6)
         UDIAG 3,'RECVBLK block',*SARADDR,(R6)
*----------------------------------------------------------------------
*  Return to caller
*----------------------------------------------------------------------
EXIT     DS    0H                           return values set
         UPSR  1,'RECVBLK exited rc',*SARC
         LM    R15,R1,SARET
         UPEND R0=PASS,R1=PASS              return R0, R1, R15
*----------------------------------------------------------------------
*  Data areas
*----------------------------------------------------------------------
         LTORG ,
         EJECT ,
*----------------------------------------------------------------------
*  Savearea/workarea
*----------------------------------------------------------------------
SAVEAREA DSECT ,
SA       DS    18F                     savearea for called code
*
SAFLG1   DS    X                       status flag
SA1DATA  EQU   128                     saw DATA segment
*
SAREASON DS    X                       UABEND reason code
*
SARET    DS    0F,0XL12
SARC     DS    F                       return code
SARLEN   DS    F                       block length
SARADDR  DS    A                       block address
*
         DS    0D
L$SA     EQU   *-SAVEAREA
         EJECT ,
         PRINT NOGEN
         WARECV ,
         DXSEG ,
         PRINT GEN
*
RECVBLK  UFINI DXDRGET,L$SA
         END   ,
