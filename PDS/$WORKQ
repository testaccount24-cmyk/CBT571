Copyright 2001, 2002 James M. Morrison


Work in progress:


STCPxxxx - TCP/IP STC/subsys

STCPTSKM - support WUD1MOD setting

Pending change notes (more or less in the order which I consider
the change's importance to be):

XMIT370  - resolve XMITs being unRECEIVEable on OS/390
           Keys with values different than their "natural"
           lengths seem very suspicious
         - create PUTKEY routine
         - review keys' value(S0, fill in with better data

RECV370  - rename ddnames
         - Split RECVCTL, create GETKEY routine

U370AP00 - call each CSECT at startup as indicated in VTAB
           Probably set bit in TGD indicating that's happening
           Create VTAB in storage so TPD, DSA can be found

U370AP99 - Add VTAB bit indicating cleanup, call each CSECT
           Call AP99 from UPEND
           Add support to UVTAB:
           EOT= end of task, EOA= end of appl

           With AP00 & AP99 changes outlined, xxxx370 should have
           very little (if any) infrastructure init to perform

DAST370  - why in the world has STSI stopped working?
           Possibly due to Hercules CVS branch structure, where
           JJ's change isn't rolled into 2.16.5 yet but is in CVS
           Didn't this work in 2.16.4 or thereabouts?
           Once that's resolved, add Herc DIAGNOSE CSECT(s)

U370HERC - finish writing
           Maybe yes, maybe no.  Given the latest plans for MVS38j
           TCP/IP, it doesn't appear we need Herc-specific code.
           This might be just as well, as Herc 2.16.5 (current as I
           type this) produces an operation exception for STSI.
           STSI was to be the technique used to identify the presence
           of the Hercules emulator.  Maybe it'll be fixed in the
           next general release of Hercules.
