U370SDWA TITLE 'ESTAE RTM SDWA analysis'
*
* Copyright 2001, 2002 James M. Morrison
*
         U#SET FUNC=UTIL
*----------------------------------------------------------------------
* Function:    Issue various diagnostic messages when U370STAE calls
*              us after an ABEND has been intercepted
*
* Entry:  R0 =
*         R1 = address of SDWA
*
* Exit:   R15 = 00
*
* Diagnostics:
*
*               1 -
*               2 - summary info
*               3 -
*               4 - show reg details (U370VADR)
*               5 -
*               6 -
*               7 -
*               8 - dump SDWA
*               9 - entry/exit
*
* Notes:
*
*----------------------------------------------------------------------
         TITLE ' '
*----------------------------------------------------------------------
* R2     subroutines
* R3     subroutines
* R4
* R5
* R6
* R7
* R8     subroutine scratch
* R9     SDWA
* R10    subroutine linkage
*----------------------------------------------------------------------
U370SDWA UPROC ID=USDW,L=L$SA
         LTR   R9,R1                        save SDWA addr
         BZ    EXIT
         UDIAG 9,'U370SDWA entered'
*----------------------------------------------------------------------
*  Display SDWA
*----------------------------------------------------------------------
         USING SDWA,R9
         UDIAG 8,'U370SDWA SDWA',(R9),L$SDWA
*----------------------------------------------------------------------
*  Display regs at time of error
*----------------------------------------------------------------------
         MVI   SAMSG,C' '
         MVC   SAMSG+1(L'SAMSG-1),SAMSG
         BAL   R10,SPACE
*
         MVC   SAM1TXT1(L'MSG1),MSG1
         BAL   R10,PRINT
*
         MVC   SAM1TXT1(5),=C'R0-R7'
         LA    R2,SDWAGRSV                  @ error regs
         LA    R3,SAM1TXT2
         BAL   R10,FMTREGS
         LA    R3,SAM1TXT3
         BAL   R10,FMTREGS
         BAL   R10,PRINT
*
         MVC   SAM1TXT1(6),=C'R8-R15'
         LA    R3,SAM1TXT2
         BAL   R10,FMTREGS
         LA    R3,SAM1TXT3
         BAL   R10,FMTREGS
         BAL   R10,PRINT
         BAL   R10,SPACE
*
         UDIAG 4,SKIP=ABENDGPR              br based on debug level
         LA    R8,16
         LA    R2,SDWAGRSV                  @ error regs
         SLR   R3,R3                        register #
ERRLOOP  BAL   R10,FMT1REG
         BAL   R10,PRINTX
         BCT   R8,ERRLOOP
         BAL   R10,SPACE
*----------------------------------------------------------------------
*  Display regs at entry to ABEND
*----------------------------------------------------------------------
ABENDGPR MVC   SAM1TXT1(L'MSG2),MSG2
         BAL   R10,PRINT
*
         MVC   SAM1TXT1(5),=C'R0-R7'
         LA    R2,SDWASRSV                  @ ABEND regs
         LA    R3,SAM1TXT2
         BAL   R10,FMTREGS
         LA    R3,SAM1TXT3
         BAL   R10,FMTREGS
         BAL   R10,PRINT
*
         MVC   SAM1TXT1(5),=C'R8-RF'
         LA    R3,SAM1TXT2
         BAL   R10,FMTREGS
         LA    R3,SAM1TXT3
         BAL   R10,FMTREGS
         BAL   R10,PRINT
         BAL   R10,SPACE
*----------------------------------------------------------------------
*  Print TCB addr & ABEND code
*----------------------------------------------------------------------
         MVC   SAM2TXT1(8),=C'TCB addr'
         L     R0,PSATOLD-PSA(,R0)          my TCB addr
         LA    R1,SAM2TXT2
         BAL   R10,FMTHEX
         BAL   R10,PRINT
*
         MVC   SAM2TXT1,=C'ABEND code'
         L     R0,SDWAABCC                  R0 in hex
         LA    R1,SAM2TXT2
         BAL   R10,FMTHEX
*
ABSYS    DS    0H                           Sxxx
         L     R0,SDWAABCC
         SRL   R0,12                        reposition abend code
         N     R0,=X'00000FFF'              isolate sys  abend
         LTR   R0,R0
         BZ    ABUSER
         SLR   R1,R1
         BAL   R10,FMTHEX
         MVI   SAM2TXT3,C'S'
         STCM  R1,7,SAM2TXT3+1
*
ABUSER   DS    0H                           Udddd
         L     R0,SDWAABCC
         N     R0,=X'00000FFF'              isolate user abend
         LTR   R0,R0
         BZ    ABREASON
         MVI   SAM2TXT4,C'U'
         LA    R1,SAM2TXT4+1
         BAL   R10,FMTDEC
*
ABREASON DS    0H                           REASON xx
         TM    SDWAERRA,SDWASVCD            SVC13 - ABEND?
         BNO   ABFIN
         SLR   R0,R0
         ICM   R0,1,SDWAGR15+3              R15 at time of error
         BNZ   ABRGO
         ICM   R0,1,SDWASR15+3              R15 at last interrupt
         BZ    ABFIN
ABRGO    SLR   R1,R1
         BAL   R10,FMTHEX
         MVC   SAM2TXT5,=C'REASON'
         STCM  R1,3,SAM2TXT6
ABFIN    DS    0H                           handle reason code ....
         BAL   R10,PRINT
*----------------------------------------------------------------------
*  Print PSWs
*----------------------------------------------------------------------
         MVC   SAM3TXT1,=C'EC PSW at error'
         LA    R2,SDWAEC1                   EC mode PSW @ error
         LA    R3,SAM3TXT9                  common LOCADDR output addr
         BAL   R10,FMTPSW
         L     R2,SDWAEC1+4
         BAL   R10,LOCADDR
         BAL   R10,PRINT
*
         MVC   SAM3TXT1(14),=C'EC PSW last RB'
         LA    R2,SDWAEC2                   EC mode PSW (last RB)
         BAL   R10,FMTPSW
         L     R2,SDWAEC2+4
         BAL   R10,LOCADDR
         BAL   R10,PRINT
*----------------------------------------------------------------------
*  Print SDWAFLGS (reason for entering recovery)
*----------------------------------------------------------------------
         MVC   SAM4TXT1,=C'SDWAFLGS'
         L     R0,SDWAFLGS                  flags
         LA    R1,SAM4TXT2
         BAL   R10,FMTHEX
         BAL   R10,PRINT
*----------------------------------------------------------------------
*  Return to caller
*----------------------------------------------------------------------
         BAL   R10,SPACE
         UDIAG 9,'U370SDWA exited'
EXIT     UPEND ,
         EJECT ,
*----------------------------------------------------------------------
*  Print blank line
*----------------------------------------------------------------------
SPACE    DS    0H
         UDIAG 2,SAMSG,1
         BR    R10
*----------------------------------------------------------------------
*  Print message
*----------------------------------------------------------------------
PRINT    DS    0H
         MVC   SAM1TXT0,=C'<2>'
PRINTX   UDIAG 2,SAMSG,L$SAMSG
         MVI   SAMSG,C' '
         MVC   SAMSG+1(L'SAMSG-1),SAMSG
         BR    R10
*----------------------------------------------------------------------
*  Format 4 registers - R2 @ reg value, R3 @ output slot
*----------------------------------------------------------------------
FMTREGS  DS    0H
         LA    R8,4                         # times to loop
FMTLOOP  LR    R1,R3
         L     R0,0(,R2)
         UCALL U370HEX
         LA    R2,4(,R2)
         LA    R3,9(,R3)
         BCT   R8,FMTLOOP
         BR    R10
*----------------------------------------------------------------------
*  Format 1 register  - R2 @ reg value, R3=register #
*----------------------------------------------------------------------
FMT1REG  DS    0H
         MVC   SAM5TXT0,=C'<4>'
         LR    R0,R3                        register #
         SLR   R1,R1
         UCALL U370HEX
         MVI   SAM5TXT1,C'R'
         STCM  R1,1,SAM5TXT1+1
         L     R0,0(,R2)                    register contents
         LA    R1,SAM5TXT2
         UCALL U370HEX
         L     R0,0(,R2)
         LA    R1,SAM5TXT3
         UCALL U370VADR                     describe where reg points
         LA    R2,4(,R2)
         LA    R3,1(,R3)
         BR    R10
*----------------------------------------------------------------------
*  Format fullword (display hex) - R0 = value, R1 @ output slot
*----------------------------------------------------------------------
FMTHEX   DS    0H
         UCALL U370HEX
         BR    R10
*----------------------------------------------------------------------
*  Format fullword (display dec) - R0 = value, R1 @ output slot
*  R0 may range from x'000' - x'FFF' (4095)
*  Output buffer will contain c'dddd'
*----------------------------------------------------------------------
FMTDEC   DS    0H
         CVD   R0,SADEC
         UNPK  0(4,R1),SADEC+5(3)
         OI    3(R1),X'F0'
         BR    R10
*----------------------------------------------------------------------
*  Format a PSW      - R2 @ PSW
*----------------------------------------------------------------------
FMTPSW   DS    0H
         L     R0,0(,R2)
         LA    R1,SAM3TXT2
         UCALL U370HEX
         L     R0,4(,R2)
         LA    R1,SAM3TXT3
         UCALL U370HEX
         BR    R10
*----------------------------------------------------------------------
*  LOCADDR           - R2 addr to look up, R3 @ output slot
*----------------------------------------------------------------------
LOCADDR  DS    0H
         LR    R0,R2
         LR    R1,R3
         UCALL U370VADR
         BR    R10
*
         LTORG ,
MSG1     DC    C'Regs at time of error'
MSG2     DC    C'Regs at entry to ABEND'
*----------------------------------------------------------------------
*  Dynamic savearea & workarea
*----------------------------------------------------------------------
SAVEAREA DSECT ,
SASA     DS    18F
SALOWSA  DS    16F
SADEC    DS    PL8
SACHAR   DS    CL4
*
SAMSG    DS    CL90
L$SAMSG  EQU   *-SAMSG
*
         ORG   SAMSG
SAM1TXT0 DS    C'<2>'
         DS    C
SAM1TXT1 DS    C'R0-R8  '
SAM1TXT2 DS    4CL9                    R0-R3, R8-R11
         DS    C
SAM1TXT3 DS    4CL9                    R4-R7, R12-R15
*
         ORG   SAMSG
SAM2TXT0 DS    C'<2>'
         DS    C
SAM2TXT1 DS    C'ABEND code'
         ORG   SAMSG+22
SAM2TXT2 DS    CL8                     fullword in chars
         DS    C
SAM2TXT3 DS    C'Sxxxx'                Sys  ABend code (hex)
         DS    C
SAM2TXT4 DS    C'Uxxxx'                User ABend code (dec)
         DS    C
SAM2TXT5 DS    C'REASON'
         DS    C
SAM2TXT6 DS    C'xx'
*
         ORG   SAMSG
SAM3TXT0 DS    C'<2>'
         DS    C
SAM3TXT1 DS    C'BC PSW at error'
         ORG   SAMSG+22
SAM3TXT2 DS    CL8                     hi word PSW
         DS    C
SAM3TXT3 DS    CL8                     lo word PSW
         DS    C
SAM3TXT9 DS    CL(L$VADRBF)            U370VADR output buffer
*
         ORG   SAMSG
SAM4TXT0 DS    C'<2>'
         DS    C
SAM4TXT1 DS    C'SDWAFLGS'
         ORG   SAMSG+22
SAM4TXT2 DS    CL8
*
         ORG   SAMSG
SAM5TXT0 DS    C'<2>'
         DS    C
SAM5TXT1 DS    C'Rn'                   Register #
         DS    C
SAM5TXT2 DS    CL8                     Register contents
         DS    C
SAM5TXT3 DS    CL(L$VADRBF)            U370VADR buffer
*
         ORG   ,
         DS    0D
L$SA     EQU   *-SAVEAREA              length of savearea
*
         UVTAB MF=DSECT                VCON table
*
         PRINT NOGEN
         WATGD ,
*
         IHAPSA  DSECT=YES
         IHASDWA ,
L$SDWA   EQU   *-SDWA
*
         PRINT GEN
U370SDWA UFINI DXDUSDWA,L$SA
         END   ,
