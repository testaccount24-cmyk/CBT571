XMIT03   TITLE 'WRITE INMR03 segment'
*
* Copyright 2001, 2002 James M. Morrison
*
*----------------------------------------------------------------------
*  To do: NO
*----------------------------------------------------------------------
         U#SET FUNC=XMIT
*----------------------------------------------------------------------
* Function: Collect the information for, and write the INMR03 segment.
*
* Caller: XMITUNLD
*
* Entry:  AMODE=24, ASC=PRIMARY, KEY=*, STATE=*
*
*         R0  =
*         R1  =
*
* Exit:   R15 = return code
*         R15 = 00 success
*
* Abends:
*
* Notes:  Very little of the INMR03 is "correct", but instead
*         reflects values seen in typical XMI datasets.
*----------------------------------------------------------------------
* R2     scratch
* R3     DVCT
* R4     UCB associated with extent
* R5     # extents
* R6     DCB
* R7     DEB, DEBDASD
* R8     estimated file size in bytes
* R9     JFCB for input file
* R10
* R11    XMTWA
* R12    base reg
* R13    savearea
*----------------------------------------------------------------------
         TITLE ' '
*----------------------------------------------------------------------
XMIT03   UPROC L=L$X03WA,ID=XM03,WA=X03WA,INIT=MVCL
         UDIAG 1,'XMIT03 entered'
         LA    R9,XMTJFCB1             @ SYSUT1's JFCB
         USING JFCB,R9
*----------------------------------------------------------------------
* Create INMR03 segment's key data
*----------------------------------------------------------------------
         MVI   X03SEGL,L$X03SGL                  segment length
         MVI   X03SEGF,SEG$1+SEG$L+SEG$C         segment flag
         MVC   X03ID,=C'INMR03'
         MVC   X03KEY(L$MR03),MR03     copy prototype key data
*
*  Update bogus key data with correct values
*
**       mvc   x03dsorg,jfcdsorg       dsorg - leave bogus
**       mvc   x03recfm,jfcrecfm       recfm - leave bogus
         MVC   X03LRECL,JFCLRECL       lrecl
         MVC   X03ESTSZ,XMTESZ         estimated file size
*----------------------------------------------------------------------
* Write INMR03 segment
*----------------------------------------------------------------------
WRITE03  DS    0H
         LA    R1,X03MR03
         UCALL XMITPUT                 write INMR03 segment
EXIT     DS    0H
         ST    R15,X03RC
         UDIAG 1,'XMIT03 exited'
         L     R15,X03RC
         UPEND  ,
*
         EJECT ,
*
*        c9d5d4d9f0f3                       *INMR03*
*        102c 0001 0004 0000bb60            filesize
*        003c 0001 0002 4000                DSORG=PS
*        0042 0001 0002 0050                LRECL=80
*        0049 0001 0002 0001                RECFM=<bogus>
*
MR03     DS    0X
KSIZE    DC    AL2(INMSIZE,1,L'VSIZE)       102C approx file size bytes
VSIZE    DC    XL4'BB60'
LSIZE    EQU   *-KSIZE
*
KDSORG   DC    AL2(INMDSORG,1,L'VDSORG)     003C dsorg <bogus>
VDSORG   DC    XL2'4000'
LDSORG   EQU   *-KDSORG
*
KLRECL   DC    AL2(INMLRECL,1,L'VLRECL)     0042 lrecl
VLRECL   DC    AL2(80)
LLRECL   EQU   *-KLRECL
*
KRECFM   DC    AL2(INMRECFM,1,L'VRECFM)     004.recfm <bogus>
VRECFM   DC    XL2'0001'
LRECFM   EQU   *-KRECFM
L$MR03   EQU   *-MR03
*
* optional keys not provided: none
*
*
         LTORG ,
*----------------------------------------------------------------------
         EJECT ,
X03WA    DSECT ,
X03SA    DS    18F
*
X03RC    DS    F             return code
X03MR03  DS    0D            INMR03 segment
X03SEGL  DS    X             segment length
X03SEGF  DS    X             segment flag
X03SEGD  DS    XL253         beginning of segment data
         ORG   X03SEGD
X03ID    DS    C'INMR03'
X03KEY   DS    0X            beginning of key data
         DC    AL2(INMSIZE,1,L'VSIZE)       102C approx file size bytes
X03ESTSZ DC    XL4'BB60'
         DC    AL2(INMDSORG,1,L'VDSORG)     003C dsorg
X03DSORG DC    XL2'4000'
         DC    AL2(INMLRECL,1,L'VLRECL)     0042 lrecl
X03LRECL DC    AL2(80)
         DC    AL2(INMRECFM,1,L'VRECFM)     0049 recfm
X03RECFM DC    XL2'0001'
L$X03SGL EQU   *-X03MR03                    actual segment length
         ORG   ,
         DS    0D
L$X03WA  EQU   *-X03WA
*
         EJECT ,
         PRINT NOGEN
         DXSEG ,
*        EJECT ,
         WAXMIT ,
*        EJECT ,
         IEZDEB LIST=YES
L$DEBDA  EQU   (DEBNMTRK+L'DEBNMTRK)-DEBDASD     l' debdasd section
*
*        EJECT ,
UCB      DSECT ,
         IEFUCBOB LIST=YES
*
*        EJECT ,
*----------------------------------------------------------------------
*  See Stage2 assembly of IECZDTAB for values & index
*----------------------------------------------------------------------
         IHADVCT ,
*
*        EJECT ,
         PRINT NOGEN
         CVT   DSECT=YES,LIST=NO
*
         DCBD  DSORG=PS,DEVD=DA
*
JFCB     DSECT ,
         IEFJFCBN ,
         PRINT GEN
*
XMIT03   UFINI DXDX03,L$X03WA
         END   ,
