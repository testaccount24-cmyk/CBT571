XMITDIR  TITLE 'Determine Directory blocks allocated'
*
* Copyright 2001, 2002 James M. Morrison
*
*----------------------------------------------------------------------
*  To do: NO
*----------------------------------------------------------------------
         U#SET FUNC=XMIT
*----------------------------------------------------------------------
* Function: Determine number of directory blocks allocated
*
* Caller: XMIT02A
*
* Entry:  AMODE=24, ASC=PRIMARY, KEY=*, STATE=*
*
*         R0  =
*         R1  =  open SYSUT1 DCB, DSORG=PO
*
* Exit:   R15 = return code
*         R15 = 00 success; R0 = # directory blocks
*
* Abends: input PDS broken in some way
*
* Notes:  It's OK for us to read the directory of the PDS, since no
*         one else (like XMIT02B) will read a DSORG=PO dataset.
*         Well, except IEBCOPY when we tell him to.
*----------------------------------------------------------------------
* R2     DCB
* R3
* R4     IOB
* R5     # dir blocks
* R6     DECB
* R7     DCBBLKSI
* R8     length of directory block
* R9     @ directory block
* R10
* R11    XMTWA
* R12    base reg
* R13    savearea
*----------------------------------------------------------------------
         TITLE ' '
*----------------------------------------------------------------------
XMITDIR  UPROC L=L$XDRWA,ID=XMDR,WA=XDRWA
         LR    R2,R1                   SYSUT1 open DCB
         USING IHADCB,R2
         UDIAG 1,'XMITDIR entered'
*----------------------------------------------------------------------
*  Initialize
*----------------------------------------------------------------------
         TM    DCBRECFM,DCBRECF        PDS directory must be recfm=f
         BNO   BROKEN
         TM    DCBRECFM,DCBRECU             recfm=u not acceptable
         BO    BROKEN
         LA    R0,EOFRTN
         STCM  R0,7,DCBEODA                 set EOF exit rtn addr
         MVC   XDRDECBI(L$DECB),MODLDECB    copy model DECB
         LH    R7,DCBBLKSI                  get blksize
         ST    R7,XDRBUFL
         GETMAIN R,LV=(R7)                  alloc input buffer
         LR    R9,R1
*
*  Read pds directory, counting directory blocks
*  This is offensively simple-minded, but there doesn't appear to be
*  an MVS control block which records the number of directory blocks
*  allocated to a PDS; even the DSCB doesn't have the info.
*  We return the # dir blocks allocated, not used, so hopefully
*  the RECEIVE program at the other end will allocate sufficient
*  directory blocks, rather than the usual number used, which causes
*  me huge amounts of grief, and probably you, too.
*
         SLR   R5,R5                        # dir blocks = 0
*----------------------------------------------------------------------
*  Read a directory block
*----------------------------------------------------------------------
         LA    R6,XDRDECBI                  @ DECB
         USING DECB,R6
READ     DS    0H
         READ  (R6),SF,(R2),(R9),'S',MF=E
         UDIAG 2,'XMITDIR: read issued'
         CHECK XDRDECBI
         UDIAG 3,'XMITDIR: dcb after CHECK',(R2),L$DCB
         UDIAG 3,'XMITDIR: decb after CHECK',(R6),L$DECB
*----------------------------------------------------------------------
*  Determine length of data retrieved, bail if not 256
*----------------------------------------------------------------------
         LH    R8,DCBBLKSI             l' READ 'S' request
         L     R4,DECIOBPT             @ IOB
         USING IOBSTDRD,R4
         UDIAG 3,'XMITDIR: IOB',(R4),20
         LH    R0,IOBSTBYT+2           residual count
         SR    R8,R0                   = l' read
*
         UDIAG 3,'XMITDIR directory block',(R9),(R8)
         C     R8,=F'256'              verify block length valid
         BNE   BROKEN
*----------------------------------------------------------------------
*  Count block just read
*----------------------------------------------------------------------
         LA    R5,1(,R5)               accumulate # dir blocks
         B     READ
*
EOFRTN   DS    0H                      END OF FILE branches here
         SLR   R15,R15
*
EXIT     DS    0H
         ST    R15,XDRRC
         L     R0,XDRBUFL
         LTR   R0,R0
         BZ    NOFREE
         LR    R1,R9
         FREEMAIN R,LV=(0),A=(1)
NOFREE   DS    0H
         ST    R15,XDRRC
         UDIAG 1,'XMITDIR exited'
         L     R15,XDRRC
         LR    R0,R5                        return dir blocks
         UPEND R0=RETURN
*
BROKEN   DS    0H
         ULOG  'XMITDIR: input dataset broken'
         ULOG  'Either RECFM not F or dir block length not 256'
         UABEND ,                           recfm=v or bad l' dirblk
*
MODLDECB READ MODLECB,SF,0,0,'S',MF=L
L$DECB   EQU  *-MODLDECB
*
         LTORG ,
*----------------------------------------------------------------------
         EJECT ,
XDRWA    DSECT ,
XDRSA    DS    18F
XDRBUFL  DS    F             l' gotten buffer
XDRDECBI READ  XDRECBI,SF,0,0,'S',MF=L
*
XDRRC    DS    F             return code
         DS    0D
L$XDRWA  EQU   *-XDRWA
*
         EJECT ,
         WAXMIT ,
*        EJECT ,
         IHADECB ,
*        EJECT ,
         IEZIOB ,
*        EJECT ,
         DCBD  DSORG=PS,DEVD=DA
L$DCB    EQU   *-IHADCB
         PRINT GEN
XMITDIR  UFINI DXDXDIR,L$XDRWA
         END   ,
