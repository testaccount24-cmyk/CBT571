*
*  Copyright 2008 James M. Morrison
*
*----------------------------------------------------------------------
*  Things to do:
*----------------------------------------------------------------------
RECVGCTL TITLE 'Read XMIT Control record'
*----------------------------------------------------------------------
         U#SET FUNC=RECV
*----------------------------------------------------------------------
* Function: Read the XMIT control record, assembling it from
*           as many segments as necessary
*
* Entry:  AMODE=24, ASC=PRIMARY, KEY=*, STATE=*
*
*         R0  =
*         R1  = when non-zero, R1 points at queued segment
*                  with prefix fields (SEGL, SEGFLG)
*               when zero, no input segment provided
*
* Exit:   R0  = control record length (data only, no SEGL and
*               no SEGFLG present in output buffer)
*               Upon EOF, R0 = 0
*         R1  = address of control record data
*               Upon EOF, R1 = 0
*         R15 = 00 success
*               04 EOF
*               08 error(s) encountered
*
*
* Abends: yes
*
* Notes:
*
* Diagnostics:
*         1 - entry/exit/status
*         2 - show returned control record
*         3 - show read control segment(s)
*----------------------------------------------------------------------
* R2     length of MVCL source
* R3     return value R0
* R4     return value R1
* R5     output buffer address
* R6     segment address
* R7     segment length
* R8     address of MVCL destination (output buffer)
* R9     length of MVCL destination
* R10    length of free space in output buffer
* R11    XMTWA
* R12    base reg
* R13    savearea
*----------------------------------------------------------------------
ERR#1    EQU   1        EOF
ERR#2    EQU   2        buffer overflow
ERR#3    EQU   3        malformed control segment; no actual data
ERR#4    EQU   4        control rec length error (zero or negative)
ERR#5    EQU   5        encountered data segment
ERR#6    EQU   6        MVCL destructive overlap
         TITLE ' '
*----------------------------------------------------------------------
RECVGCTL UPROC L=L$SA,ID=RGCT,WA=SAVEAREA,INIT=MVCL
*----------------------------------------------------------------------
*  Initialize
*----------------------------------------------------------------------
         LR    R6,R1                        save entry parm
         UPSR  1,'GCTL enter',(R6)
         MVC   RCVGCEYE,=C'RECVGCTL'        output buffer eyecatcher
         L     R15,=A(RCVGCBUF-RECVWA)      output buffer offset in WA
         LA    R8,RECVWA(R15)               output buffer addr
         LR    R5,R8
         L     R9,=A(L$GCBUFL)              output buffer length
         LR    R10,R9
*        STM   R0,R15,RCVREGS
*        USNAP 'GCTL initialized',RCVREGS,16*4
*----------------------------------------------------------------------
*  Dequeue queued segment when provided
*----------------------------------------------------------------------
         LTR   R6,R6                        queued segment present?
         BNZ   CKSEG                        yes, br
*----------------------------------------------------------------------
*  Read control segment
*----------------------------------------------------------------------
GETSEG   DS    0H
         UCALL RECVGSEG                     retrieve XMIT segment
         LTR   R6,R1                        @ returned segment or zero
         BNZ   CKSEG
*----------------------------------------------------------------------
*  End of file on XMITIN
*----------------------------------------------------------------------
EOF      DS    0H
         UDIAG 1,'GCTL EOF'
         MVI   SAREASON,ERR#1               EOF
         SLR   R3,R3                        R0 return value zero
         SLR   R4,R4                        R1 return value zero
         MVI   SARC+3,4                     EOF rc
         B     EXIT
*----------------------------------------------------------------------
*  Check read segment
*----------------------------------------------------------------------
         USING XMITSEG,R6
CKSEG    DS    0H
         SLR   R7,R7
         IC    R7,SEGL                      segment length
         TM    SEGFLG,SEG$C                 control segment?
         BO    HAVESEG                      yes, br
         MVI   SAREASON,ERR#5               RECVGSEG returned data seg
         UDIAG 0,'GCTL ERROR data segment',(R6),(R7)
         B     DIE                          we should never see data
         EJECT ,
*----------------------------------------------------------------------
*  Skip past SEGL & SEGFLG to control record data
*----------------------------------------------------------------------
HAVESEG  DS    0H
         UDIAG 3,'GCTL control segment',(R6),(R7)
         MVC   SASEGL,SEGL                  save segment length
         MVC   SAFLG1,SEGFLG                save segment flag
         LA    R0,L'SEGL+L'SEGFLG           length of prefix fields
         AR    R6,R0                        skip segment prefix
         SR    R7,R0                        segment data length
         MVI   SAREASON,ERR#3               assume malformed segment
         BNP   DIE
*----------------------------------------------------------------------
*  Append control segment's data to output buffer
*----------------------------------------------------------------------
*        STM   R0,R15,RCVREGS
*        USNAP 'GCTL pre MVCL',RCVREGS,16*4
*
         MVI   SAREASON,ERR#2               assume truncation
         CR    R10,R7                       will data fit in buffer?
         BL    DIE
         LR    R9,R7
         LR    R2,R7
         MVCL  R8,R6                        copy dest,source
*
         MVI   SAREASON,ERR#2               assume truncation
         BC    4,DIE                        1st op (dest) len low
*
         MVI   SAREASON,ERR#6               assume destructive overlap
         BC    1,DIE                        no data movement
*
         SR    R10,R2                       recalc free space
*        STM   R0,R15,RCVREGS
*        USNAP 'GCTL post MVCL',RCVREGS,16*4
*----------------------------------------------------------------------
*  Loop back until all segments of control record read
*----------------------------------------------------------------------
         TM    SAFLG1,SEG$L                 last segment in ctl rec?
         BNO   GETSEG                       nope, read another segment
*----------------------------------------------------------------------
*  Calculate control record length
*----------------------------------------------------------------------
         LR    R3,R8                        @ end of ctl rec in WA
         SR    R3,R5                        ctl rec length
         MVI   SAREASON,ERR#4               ctl rec length error
         BNP   DIE
*----------------------------------------------------------------------
*  Return to caller
*----------------------------------------------------------------------
EXIT     DS    0H
*        STM   R0,R15,RCVREGS
*        USNAP 'GCTL exit regs',RCVREGS,16*4
         UPSR  1,'GCTL exit R0',(R3)
         UPSR  1,'GCTL exit R1',(R5)
         UPSR  1,'GCTL exit rc',*SARC
         LR    R0,R3                        control record length
         LR    R1,R5                        control record address
         UPEND R0=PASS,R1=PASS,RC=*SARC
         EJECT ,
*----------------------------------------------------------------------
*  Abend
*----------------------------------------------------------------------
DIE      UABEND SAREASON
         EJECT ,
*
         LTORG ,
         EJECT ,
*----------------------------------------------------------------------
*  Savearea/workarea
*----------------------------------------------------------------------
SAVEAREA DSECT ,
SA       DS    18F
SARC     DS    F
*
SASEGL   DS    X             saved segment SEGL
SAFLG1   DS    X             saved segment SEGFLG
*
SAREASON DS    X             UABEND reason code
*
*
         DS    0D
L$SA     EQU   *-SAVEAREA
         EJECT ,
         PRINT GEN
         WARECV GEN=,PRINT=ON
         EJECT ,
         DXSEG ,
         EJECT ,
RECVGCTL UFINI DXDRGCT,L$SA
         END   ,
