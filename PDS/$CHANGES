Copyright 2001-2008 James M. Morrison

Change log

00.06 - 2008/04/09
------------------

Bug fix for Y2K incorporated (U370DATE CSECT)

Bug fix: control records split across multiple segments

    Changes/additions: RECV#BUG, RECVGET -> RECVGSEG,
    JBUGTINY, JINSTALL, JRECV1, JRECVALL, KBUGRECV,
    KLNKRECV, RECV370, RECVBLK, RECVCTL, RECVGSEG, $RECV,
    RECVVTAB, WARECV, WARGS, RECVGCTL (new), JCBTXMIT, U#SET

Remove IP Stack code (copy archived in CBT File 571)

0005 - 2002/??/??
-----------------

Infrastructure changes
In general, an attempt was made to make xxxx370 ready for running
under multiple TCBs in support of the MVS38j TCP/IP work

Added TGD, Task Global Data, to the front of each xxxx370's WAxxxx
mapping.  Rather than share XMITWA, each xxxx370 application (XMIT,
RECV, DAST, etc.) has their own WAxxxx DSECT.   Appl names must be
four chars; mine end in 370.

Added CPD, CSECT-related Persistent Data
Each CSECT has the opportunity to extend the base CPD with their
user CGD additions.  CPD data is only initialized at the beginning
of the xxxx370 application.  The SX is also only initialized at
appl startup.  Each CSECT's SA is still cleard to x'00' in UPROC.
Practically speaking, the CPD precedes the DSA in storage due to
the way UFINI defines the Pseudo-Registers.

DSA pool redesigned.  Rather than the old Dynamic DSA technique, Q-cons
are used to provide static DSA locations.  New CSECT U370AP00 inits
each CPD (see below) and SX, reducing the UPROC code path.

U370AP00 copies U370VTAB (each appl has it's own VTAB, with each one
using the U370VTAB CSECT name) to it's CPD and anchors it via TGD@VTAB
AP00 locates each CSECT's CPD (if it has one), and each CSECT's
DSA (SX + SA); stores the addresses and lengths in VTAB.  Once
U370DBUG gets control, (subject to the correct debug level) the VTAB
is displayed producing a handy debugging reference.

With the advent of QCON DSAs, the order in which the Linkage Editor
see it's input object decks becomes important so that LKED assigns
offset zero to the TGD.  CSECT xxxx370 must be first obj deck.
UPROC checks & ABENDs if non-zero.

New CSECT U370STAE - added ESTAE support
Each CSECT can specify a Retry routine which will be called via RTM2.
$RTM member has a few RTM notes, but not much.
ESTAE support has some minimal CPD storage requirements, but most
of the ESTAE support is optional depending on UPROC specifications.

U370SDWA called by U370STAE.RETRY2 produces summary debugging info
from RTM's SDWA.  For each 'at time of error' GPR, U370SDWA calls
new CSECT U370VADR which attempts to describe where the GPR points.

XMITDBUG ddname now xxxxDBUG, where xxxx is appl name
XMITPRT  ddname now xxxxLOG,  where xxxx is appl name

Renamed all the UTILxxxx CSECTs to U370xxxx, mostly so all the U*
macros are distinct from the CSECTs.  Renamed many macros; all
code generating macros (and a few others) should begin with U.

Effective with this release, all xxxx370 applications require APF
authorization.  U370AP00 will enter supervisor state, U370AP99 will
return to problem state before returning to ID=MAIN's caller.

New:
DSACPD   macro    - data area; CPD = CSECT Persistent Data
DSAEX    macro    - data area; DSA = SA + SX: savearea & header
DSWIB    macro    - data area; WIB = WUD Information Block
DSWUD    macro    - data area; WUD = Work Unit Descriptor
                    STCPTSKM parm & STCP subtask inventory
DVADRBUF macro    - data area; U370VADR output buffer
JSTCP    JCL      - run STCP370 in batch
JSTCPALL JCL      - assemble all STCP370 CSECTs
JSTCP1   JCL      - assemble single STCP370 CSECT
KBUGDAST input    - DAST370 debug level spec for U370DBUG
KBUGRECV input    - RECV370 debug level spec for U370DBUG
KBUGSTCP input    - STCP370 debug level spec for U370DBUG
KBUGXMIT input    - XMIT370 debug level spec for U370DBUG
KLNKDAST input    - DAST370 linkage editor input
KLNKRECV input    - RECV370 linkage editor input
KLNKSTCP input    - STCP370 linkage editor input
KLNKXMIT input    - XMIT370 linkage editor input
RECV#BUG CSECT    - RECV370 TGD debug bytes
RECVMSG  CSECT    - RECV370 handle embedded message file
RECVVTAB CSECT    - RECV370 VCON table
STCP#BUG macro    - STCP370 TGD debug bytes
STCPOPR  CSECT    - STCP370 operator interface startup & subtask
STCPTSKM CSECT    - STCP370 task manager & subtask startup
STCPVTAB CSECT    - STCP370 VCON table
STCP370  CSECT    - STCP370 main
TCP      JCL      - STCP370 SYS1.PROCLIB(TCP) PROC - TCP/IP STC
U#DPR    macro    - Define Pseudo-Register (internal macro)
U#EQU    macro    - common equates
U@CPD    macro    - locate CSECT's CPD/TPU
U@SX     macro    - locate CSECT's SX
UESTAE   macro    - STCPSTAE interface - ESTAE support
ULOCK    macro    - Compare and Swap helper macro (saves reading POPs)
UQENV    macro    - U370QENV interface - query environment
USTATE   macro    - inline code - MODESET & SPKA support
UVTAB    macro    - xxxxVTAB entry & DSECT
UWTO     macro    - U370WTO interface - WTO support
U370#BUG macro    - U370xxxx TGD debug bytes + xxxx370 debug byte
U370#VTB macro    - xxxxVTAB VCON table definitions for U370xxxx
U370AP00 CSECT    - Appl startup, UPROC support
U370AP99 CSECT    - stub
U370CHAR CSECT    - Convert R0 to EBCDIC
U370HERC CSECT    - incomplete fooling around with Hercules DIAGNOSEs
U370QENV CSECT    - query APF & Hercules emulator presence
U370QTCB CSECT    - debug aid; TCB summary
U370SDWA CSECT    - debug aid; displays SDWA for U370STAE
U370STAE CSECT    - ESTAE support
U370VADR CSECT    - text description of virtual address
U370WTO  CSECT    - issues WTO, echoes on xxxxLOG ddname
WADAST   macro    - DAST370 workarea
WARECV   macro    - RECV370 workarea
WASTCP   macro    - STCP370 workarea
WATGD    macro    - TGD - beginning of WAxxxx areas
WAXMIT   macro    - XMIT370 workarea
XMIT#BUG CSECT    - XMIT370 TGD debug bytes
XMITVTAB CSECT    - XMIT370 VCON table

Notable CSECT changes:
U370ABND - gutted, no longer issues WTOs with ABEND regs
           U370STAE/U370SDWA does much nicer job
           Calls U370VADR to get module.csect+offset for WTO
U370LOG  - If TGDLOGD = ddname, will be used for OPEN
U370SNAP - finally eliminated excessive duplicate output
U370AP99 - will call CSECT XXXXAP99 for application-specific
           cleanup




0004 - 2002/06/13
-----------------

First version to be contributed to the CBT tape.  Sam G gently prodded
me, and I finally did it.  See also

    http://ensose.com/mvs38j.html

for possibly more recent versions (in case I forget to send them to
Sam), and some other stuff for MVS38j - including

    MVS38j 3375/3380/3390 support,
    RECV390,
    and some Hercules user tools like rdrprep, dasdseq.

Really curious persons are free to check the mvs38j directory on that
machine for who-knows-what bits du-jour).  Most likely, I've said
something about those bits in the H390-MVS or hercules-390 groups
(currently hosted at Yahoo.com).

Addition of COPYR1 feature, which allows minor customization of the
IEBCOPY COPYR1 record for unloaded PDSs.  IEBCOPY is rumored to have
had variously sized COPYR1 records throughout it's history, this is
intended to create XMITs targeted for environments which have IEBCOPY
versions that don't understand differently sized COPYR1s.

Annoying XMITDBUG open fail message no longer appears; UTILTIOT used
to scan TIOT before open attempted

Renamed many macros, asm source code, jcl to permit distribution of
one library for CBT distribution ease.

Observant readers may note references to RECV370; it's not officially
in this version, but the code's there for the brave.  You'll likely
need it if you plan on receiving the XMITs created by XMIT370 with
something besides dasdload or RECV390.  That wasn't the plan, but
testing has revealed some interesting TSO/E RECEIVE/IEBCOPY behaviors
I wasn't counting on.  See $NOTES for further details.

UTILABND needs more work; the STSI technique for identifying Hercules
was recently (2002/06/19) decided, and this version of XMIT370 does
nothing in particular with it.  STSI is now a valid instruction
in S/370 mode under Hercules.  Getting the SYSIB seems beyond the
reach of S/370 mode however, as the STSI parm regs R0 & R1 need
to be 'grande' sized (64 bit); S/370 regs are obviously only 32 bit.
The HERC macro generates a DIAGNOSE instruction of various flavors.

This version should assemble OK with ASMF.  There are some "extra"
macros which I hope to get working later.  In particular, the
IM#INSTR macro I mentioned on H390-MVS isn't ready.  The sublist
macros IM#SUBL, IM#SPLIT aren't tested and are probably only needed
for ASMF; such nonsense isn't necessary for higher level assemblers.
IM#IGEN & IM#IGENF are internal to IM#INSTR (as I recall), and aren't
needed for this version.  Sam's been patient enough, so I'm leaving
them ASIS for now.



0003 - 2001/09/05
-----------------

Changed from custom License to Q Public License version                 1.0.

Includes new Debug facility.

Repackaged to build from source or XMIT.



0002 - 2001/06/13
-----------------

Clem Clarke was the only one who got this version.

The source code was converted from HLASM to ASM-F using the Rexx execs
(supplied only in previous versions, there's probably a copy of them
still lying around at ftp://ensose.com/mvs38j), which did about 75% of
the work converting the assembler source code & macros.  Deemed
necessary so that Hercules MVS38j users can play along.

Repair bug in XMITPUT which would ABENDS0C4 for some of Clem's JOL
files.



0001 - 2001/04/07
-----------------

Redistributed version 00.00 with source

Added directories for asm, jcl, list, mac and obj



0000 - 2001/02/26
-----------------

Initial distribution

