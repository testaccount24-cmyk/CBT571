XMITKEY  TITLE 'Place key/count/length/value in segment'
*
* Copyright 2002 James M. Morrison
*
*----------------------------------------------------------------------
*  To do: NO
*----------------------------------------------------------------------
         U#SET FUNC=XMIT
*----------------------------------------------------------------------
* Function: Given one or more key/count/length/value specifications,
*           place them in the provided (control) segment buffer
*
* Caller: various
*
* Entry:  AMODE=24, ASC=PRIMARY, KEY=*, STATE=*
*
*         R0  = ignored
*         R1  = address of VL parmlist as follows:
*
*               +00  addr of CL255 segment buffer (see XMITSEG DSECT)
*               +04  addr of first key/count/length/value
*               ...  ....    next
*               ...  ...     last
*
*               Upon entry, the segment buffer must have the
*               following fields initialized:
*
*               SEGL
*               SEGFLG
*               SEGCTLNM
*               and for INMR02s: SEGC2NUM
*
* Exit:   R15 = 00
*
* Notes:
*----------------------------------------------------------------------
* R2           address of last usable segment buffer byte
* R3           address of current parmlist entry
* R4           address of segment buffer
* R5           length of segment data (SEGL)
* R6           count field
* R7
* R8           output pointer
* R9           input  pointer
* R10          scratch
*----------------------------------------------------------------------
         TITLE ' '
*----------------------------------------------------------------------
XMITKEY  UPROC L=L$SA,ID=XKEY,INIT=XC
         STM   R0,R1,SAENTRY
         L     R4,0(,R1)               @ segment buffer
         USING XMITSEG,R4
         SLR   R5,R5
         IC    R5,SEGL                 caller already init'd buffer
         LA    R3,4(,R1)               @ 1st key addr
         UDIAG 1,'KEY enter'
         UDIAG 2,'KEY entry seg',(R4),(R5)
*----------------------------------------------------------------------
*  For each key address passed, place key & count in segment buffer
*----------------------------------------------------------------------
         LA    R2,XMITSEG+254          output limit
         LA    R8,XMITSEG(R5)          @ output area
KEYLOOP  DS    0H
         LA    R0,4(,R8)
         CR    R0,R2                   enough room for key & count?
         BH    DIE                     nope, br
         L     R9,0(,R3)               @ input key
         ICM   R6,15,0(R9)             grab key & count
         STCM  R6,15,0(R8)             store key & count
         LA    R8,4(,R8)               bump past key & count
*----------------------------------------------------------------------
*  Place key's length & value pairs in segment buffer
*----------------------------------------------------------------------
         SLL   R6,16
         SRL   R6,16                   remove key
         LTR   R6,R6                   count = 0 (flag)?
         BZ    KEYNEXT                 yes, br
         LA    R9,4(,R9)               bump past key & count
VLOOP    DS    0H
         SLR   R10,R10
         ICM   R10,3,0(R9)             grab length
         BZ    DIE
         LA    R0,2(R10,R8)
         CR    R0,R2                   too much data?
         BH    DIE
         STCM  R10,3,0(R8)             store length
         BCTR  R10,0
         EX    R10,COPY                copy value to output buffer
         LA    R8,3(R10,R8)            bump past length & value
         LA    R9,3(R10,R9)            bump past length & value
         BCT   R6,VLOOP
*----------------------------------------------------------------------
*  Select next key from the parmlist, unless we just finished last one
*----------------------------------------------------------------------
KEYNEXT  DS    0H
         TM    0(R3),X'80'             end of parmlist?
         BO    EXIT                    yes, finished
         LA    R3,4(,R3)               @ next key address
         B     KEYLOOP
*
COPY     MVC   2(*-*,R8),2(R9)         EX target
DIE      DS    0H
         UABEND SAREASON               reason code = 00
*----------------------------------------------------------------------
*  Return to caller
*----------------------------------------------------------------------
EXIT     DS    0H
         LR    R5,R8
         SR    R5,R4                   calculate segment length
         STC   R5,SEGL
         UDIAG 2,'KEY exit seg',(R4),(R5)
         UDIAG 1,'KEY exit'
         UPEND ,
*
         LTORG ,
*----------------------------------------------------------------------
*  Savearea, workarea
*----------------------------------------------------------------------
SAVEAREA DSECT ,
SASA     DS    18F
SAENTRY  DS    2F            entry parms R0:R1
SARC     DS    F             return code
SAREASON DS    X
         DS    0D
L$SA     EQU   *-SAVEAREA
         PRINT NOGEN
         DXSEG ,
         WAXMIT ,
XMITKEY  UFINI DXDXKEY,L$SA
         END   ,
