         GBLC  &G#VRSN
XMIT370  TITLE 'TSO/E TRANSMIT clone for MVS 3.8J'
*
*  Copyright 2001-2008 James M. Morrison
*
*----------------------------------------------------------------------
*  Things to do:
*  1)  FREEPOOL SYSUT1/SYSUT2
*----------------------------------------------------------------------
         U#SET FUNC=XMIT
*----------------------------------------------------------------------
* Function: Create a file compatible with TSO/E TRANSMIT,
*           given an input file that is a PDS or sequential file.
*           This version runs in batch, not as a CP.
*
* Entry:  AMODE=24, ASC=PRIMARY, KEY=*, STATE=*
*
*         R0  =
*         R1  =  Address of OS parmlist
*         R13 =  savearea ptr
*         R14 =  return addr to caller
*         R15 =  address of XMIT370
*
* Exit:   R15 = return code
*         R15 = 00 success
*
* Abends: U0001 DCB didn't open
*
* Notes:
*
*----------------------------------------------------------------------
* R2     XPSWA
* R3     DCB
* R4     OS parm ptr
* R5
* R6
* R7
* R8
* R9
* R10
* R11    XMTWA    ... ALL CSECTS (contains our savearea)
* R12    BASE REG ... ALL CSECTS (dummy for us)
* R13    savearea
*----------------------------------------------------------------------
ERR#1    EQU   1        not APF authorized
ERR#2    EQU   2        SYSUT1 open failed
ERR#3    EQU   3        invalid DSORG; PO or PS supported
ERR#4    EQU   4        RDJFCB failed
         TITLE ' '
*----------------------------------------------------------------------
XMIT370  UPROC L=L$MAIN,ID=MAIN,CPD=(Y,0,ESTAE)
*----------------------------------------------------------------------
* Init XMTWA
*----------------------------------------------------------------------
         MVC   XMTXPSWE,=C'PUTWORK '        set XPSWA eyecatcher
*----------------------------------------------------------------------
*  Wake up LOG
*----------------------------------------------------------------------
         ULOG  'XMIT370 &G#VRSN Copyright 2001-2008, James M. Morrison'
         ULOG  'XMIT370 may be distributed under the terms of the Q Pub+
               lic License version 1.0'
         ULOG  'XMIT370 Initial Developer James M. Morrison'
         ULOG  ' '
*----------------------------------------------------------------------
*  Handle XMITDBUG ddname
*----------------------------------------------------------------------
         UCALL U370DBUG                     handle XMITDBUG ddname
*----------------------------------------------------------------------
*  Verify we're authorized
*----------------------------------------------------------------------
         TESTAUTH FCTN=1                    authorized?
         LTR   R15,R15
         BZ    AUTHOK
         ULOG  'XMIT370 requires authorization'
         MVI   SAREASON,ERR#1
DIE      UABEND SAREASON                    surrender
AUTHOK   DS    0H
         UESTAE RETRY                       establish ESTAE
*----------------------------------------------------------------------
*  Open DCBs, complain & abend if they don't open
*----------------------------------------------------------------------
         MVC   XMTDCBI(L$DCBI),MODLDCBI     copy model DCB macro
         MVC   XMTOPN(L$OPN),MODLOPN        copy model OPEN macro
         LA    R0,XMTJFCB1                  relocate EXLST JFCB addr
         ST    R0,XMTJFCBL
         MVI   XMTJFCBL,X'87'               VL flag + X'07' RDJFCB
         LA    R0,XMTJFCBL                  relocate DCB's EXLST
         STCM  R0,7,(DCBEXLSA-IHADCB)+XMTDCBI
         LA    R3,XMTDCBI
         USING IHADCB,R3
         OPEN  (XMTDCBI,INPUT),MF=(E,XMTOPN)
         TM    DCBOFLG1,DCBOFOPN            opened?
         BO    DCBIOPEN
         ULOG  'XMIT370: SYSUT1 open failed'
         MVI   SAREASON,ERR#2               input DCB didn't open
         B     DIE
DCBIOPEN DS    0H
         UDIAG 3,'370: SYSUT1 DCB opened',XMTDCBI,L$DCB
*
* Verify DSORG=PS or DSORG=PO
*
         TM    DCBDSRG1,DCBDSGPS            DSORG=PS?
         BO    ORGOK
         TM    DCBDSRG1,DCBDSGPO            DSORG=PO?
         BO    ORGOK
         ULOG  'XMIT370 only support DSORG=PS or DSORG=PO datasets'
         MVI   SAREASON,ERR#3               invalid DSORG
         B     DIE
ORGOK    DS    0H
*
* We have to read the JFCB after the dataset is open,
* otherwise the JFCB doesn't have the DSORG field filled in
* which confuses XMITUNLD when it eventually looks at the JFCB
*
         RDJFCB (XMTDCBI,INPUT),MF=(E,XMTOPN)
         LTR   R15,R15
         BZ    HAVJFCB
         ULOG  'XMIT370: RDJFCB failed'
         MVI   SAREASON,ERR#4               RDJFCB failed
         B     DIE
HAVJFCB  DS    0H
         UDIAG 3,'370: SYSUT1 JFCB',XMTJFCB1,L$JFCB
         LA    R0,XMTJFCB1
         ST    R0,XMT@JFCB                  @ SYSUT1's JFCB
*----------------------------------------------------------------------
*  Unload SYSUT1 and write segments
*----------------------------------------------------------------------
         L     R14,XMT#FILE
         LA    R14,1(,R14)                  bump file number
         ST    R14,XMT#FILE
         UCALL XMITUNLD,ERR=EXIT
*----------------------------------------------------------------------
*  Return to caller
*----------------------------------------------------------------------
EXIT     UPEND RC=*XMTRC                    provide return code
*----------------------------------------------------------------------
*  ESTAE retry routine
*----------------------------------------------------------------------
RETRY    DS    0H
         ULOG  'XMIT370 ABENDed'
         LA    R3,20
         ST    R3,XMTRC
         B     EXIT
*----------------------------------------------------------------------
*  Data areas
*----------------------------------------------------------------------
         LTORG ,
*
MODLOPN  OPEN  (,),MF=L                model OPEN
L$OPN    EQU   *-MODLOPN               l' model open
*
* If the SYSUT1 dataset is DSORG=PS, XMIT02B needs it opened
* If the SYSUT1 dataset is DSORG=PO, XMIT02A deals with closing
* and reopening the dataset.  The DCB below reflects DCB attributes
* that may not be true, but all the rest of our code examines the
* JFCB rather than the DCB to determine DCB attributes, so we should
* be ok.
*
MODLDCBI DCB   DDNAME=SYSUT1,DSORG=PS,LRECL=256,BLKSIZE=256,RECFM=F,   +
               EXLST=0,MACRF=R
L$DCBI   EQU   *-MODLDCBI
*
         EJECT ,
*----------------------------------------------------------------------
         WAXMIT PRINT=ON,GEN=
         EJECT ,
         DXSEG ,
         EJECT ,
SAVEAREA DSECT ,
         DS    18F           dummy "main" proc savearea
SAREASON DS    X
         DS    0D
L$MAIN   EQU   *-SAVEAREA
*
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
L$DCB    EQU   *-IHADCB
*
JFCB     DSECT ,
         IEFJFCBN ,
L$JFCB   EQU   *-JFCB
         PRINT GEN
XMIT370  UFINI DXDX370,L$XMTWA,ID=TGD
XMIT370  UFINI DXDMAIN,L$MAIN
         END   ,
